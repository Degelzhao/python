1.列表(list):列表由一系列按特定顺序排列的元素组成，用[]表示列表，并用逗号来分隔其中的元素
列表是有序集合
可使用title()方法对列表中的元素进行标题化

索引从0开始而不是从1开始
python访问最后一个元素的索引为-1
可以使用append()向列表尾添加元素
list.append('hello')
可以使用insert()向列表任何位置插入元素
list.insert(0, 'hello')
可以使用del()删除已知列表位置的元素
del list[0]
可以使用pop()删除列表末尾的元素，并让你能够接着使用它
list2 = list1.pop()
实际上可以使用pop()删除列表中任何位置的元素，只需要知道元素的索引即可
list2 = list1.pop(0)

关于del()和pop()的使用:
如果你要从列表中删除一个元素，且不再以任何方式使用它，就使用del语句
如果你要在删除元素后还能继续使用它，就使用方法pop()

可以使用remove()来根据元素的值删除该元素
list.remove('hello')
使用remove()从列表中删除元素时，也可接着使用它的值，例：
var1 = 'hello'
list.remove(var1)
print(var1)
将列表元素赋给一个变量，删除指定的元素后，依然可以使用存储在变量中的元素值进行一系列操作


在你创建列表时，元素的排列顺序常常是无法预测的，因为你并非总能控制用户提供数据的顺序
1.使用sort()对列表进行永久性排序
list.sort()
2.使用sorted()对列表进行临时排序
print(sorted(list))
3.使用reverse()可以永久反转列表元素的排列顺序
list.reverse()
print(list)
4.使用len()可快速获取列表的长度
len(list)



使用range()创建数字列表
numbers = list(range(1, 6))
print(numbers)
使用range()，还可指定步长
在python中，两个星号(**)表示乘方运算
list = []
for value in range(1,10):
    list.append(value**2)
print(list)


列表解析:将上述for循环和创建新元素的代码合并成一行，并自动附加新元素
list = [value**2 for value in range[1,10]]
print(list)
列表解析语法规则:
1.首先指定一个描述性的列表名，如list
2.指定一个左方括号
3.定义一个表达式，用于生成你要存储到列表中的值
4.编写一个for循环，用于给表达式提供值
5.再加上右方括号
注意:这里的for语句末尾没有冒号


切片:
list[0:3]:取列表的前三个元素
list[1:3]:取列表第2~3个元素
list[:3]:取列表的前三个元素，如果你没有指定第一个索引，python将自动从列表开头开始
list[1:]:提前列表从第2个元素到列表末尾的所有元素
list[-3:]:提取列表末尾最后3个元素
复制列表:
要复制列表，可创建一个包含整个列表的切片，方法是同时省略起始索引和终止索引([:])
这让python创建一个始于第一个元素，终止于最后一个元素的切片，即复制整个列表
list2 = list1[:]

2.元组(tuple):不可变的列表称为元组，使用()定义
相比于列表，元组是更简单的数据结构，如果需要存储的一组值再程序的整个生命周期内都不可变，可使用元组

3.PEP8代码风格:
1>python根据缩进来判断代码行与前一个代码行的关系
2>PEP8建议每级缩进都使用4个空格
3>建议每行不超过80个字符
