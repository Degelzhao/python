1.在python中，函数会创建一个新的作用域，python开发者可能会说函数有自己的命名空间，这意味着在函数内部碰到一个变量的时候函数会优先在自己的命名空间里面去寻找。

2.在python的作用域规则里面，创建变量一定会一定会在当前作用域里创建一个变量，但是访问或者修改变量时会先在当前作用域查找变量，没有找到匹配变量的话会依次向上在闭合的作用域里面进行查看找。

3.变量的生存周期
def foo():
     x = 1
foo()
print x # 1
Traceback (most recent call last):
 
NameError: name 'x' is not defined
会发生#1处的错误是因为：
函数foo的命名空间随着函数调用开始而开始，结束而销毁

4.我们可以给只定义了位置参数的函数传递命名参数（实参），反之亦然！

5.函数在python里面就是对象，和其他的东西一样